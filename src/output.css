/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-black: #000;
    --color-white: hsl(0, 0%, 100%);
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-900: hsl(0, 0%, 8%);
    --color-800: hsl(0, 0%, 12%);
    --color-700: hsl(0, 0%, 20%);
    --color-green: hsl(75, 94%, 57%);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .z-\[-1\] {
    z-index: -1;
  }
  .z-\[-\] {
    z-index: -;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .table {
    display: table;
  }
  .size-20 {
    width: calc(var(--spacing) * 20);
    height: calc(var(--spacing) * 20);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-50 {
    height: calc(var(--spacing) * 50);
  }
  .h-70 {
    height: calc(var(--spacing) * 70);
  }
  .h-100 {
    height: calc(var(--spacing) * 100);
  }
  .h-110 {
    height: calc(var(--spacing) * 110);
  }
  .h-130 {
    height: calc(var(--spacing) * 130);
  }
  .h-140 {
    height: calc(var(--spacing) * 140);
  }
  .h-150 {
    height: calc(var(--spacing) * 150);
  }
  .h-screen {
    height: 100vh;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-50 {
    width: calc(var(--spacing) * 50);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-100 {
    width: calc(var(--spacing) * 100);
  }
  .w-200 {
    width: calc(var(--spacing) * 200);
  }
  .w-full {
    width: 100%;
  }
  .w-sm {
    width: var(--container-sm);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-800 {
    background-color: var(--color-800);
  }
  .bg-900 {
    background-color: var(--color-900);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .text-\[12px\] {
    font-size: 12px;
  }
  .text-\[14px\] {
    font-size: 14px;
  }
  .text-\[25px\] {
    font-size: 25px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-\[14\] {
    color: 14;
  }
  .text-gray-50 {
    color: var(--color-gray-50);
  }
  .text-green {
    color: var(--color-green);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-initial {
    --tw-duration: initial;
  }
  .group-hover\:text-black {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:right-0 {
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * 0);
    }
  }
  .before\:bottom-0 {
    &::before {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .before\:left-0 {
    &::before {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .before\:z-\[-1\] {
    &::before {
      content: var(--tw-content);
      z-index: -1;
    }
  }
  .before\:z-\[1\] {
    &::before {
      content: var(--tw-content);
      z-index: 1;
    }
  }
  .before\:h-full {
    &::before {
      content: var(--tw-content);
      height: 100%;
    }
  }
  .before\:w-1 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1);
    }
  }
  .before\:bg-green {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-green);
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:after\:right-0 {
    &::after {
      content: var(--tw-content);
      &::after {
        content: var(--tw-content);
        right: calc(var(--spacing) * 0);
      }
    }
  }
  .after\:right-0 {
    &::after {
      content: var(--tw-content);
      right: calc(var(--spacing) * 0);
    }
  }
  .after\:bottom-0 {
    &::after {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .after\:z-\[-1\] {
    &::after {
      content: var(--tw-content);
      z-index: -1;
    }
  }
  .after\:h-10 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 10);
    }
  }
  .after\:h-full {
    &::after {
      content: var(--tw-content);
      height: 100%;
    }
  }
  .after\:w-1 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1);
    }
  }
  .after\:w-10 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 10);
    }
  }
  .after\:content-start {
    &::after {
      content: var(--tw-content);
      align-content: flex-start;
    }
  }
  .after\:bg-green {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-green);
    }
  }
  .before\:after\:z-\[-1\] {
    &::before {
      content: var(--tw-content);
      &::after {
        content: var(--tw-content);
        z-index: -1;
      }
    }
  }
  .hover\:before\:w-full {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          width: 100%;
        }
      }
    }
  }
  .hover\:after\:w-full {
    &:hover {
      @media (hover: hover) {
        &::after {
          content: var(--tw-content);
          width: 100%;
        }
      }
    }
  }
  .\[\&_button\]\:relative {
    & button {
      position: relative;
    }
  }
  .\[\&_button\]\:z-\[1\] {
    & button {
      z-index: 1;
    }
  }
  .\[\&_button\]\:h-4 {
    & button {
      height: calc(var(--spacing) * 4);
    }
  }
  .\[\&_button\]\:h-10 {
    & button {
      height: calc(var(--spacing) * 10);
    }
  }
  .\[\&_button\]\:h-40 {
    & button {
      height: calc(var(--spacing) * 40);
    }
  }
  .\[\&_button\]\:cursor-pointer {
    & button {
      cursor: pointer;
    }
  }
  .\[\&_button\]\:overflow-hidden {
    & button {
      overflow: hidden;
    }
  }
  .\[\&_button\]\:rounded-lg {
    & button {
      border-radius: var(--radius-lg);
    }
  }
  .\[\&_button\]\:rounded-md {
    & button {
      border-radius: var(--radius-md);
    }
  }
  .\[\&_button\]\:bg-700 {
    & button {
      background-color: var(--color-700);
    }
  }
  .\[\&_button\]\:font-semibold {
    & button {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .\[\&_button\]\:text-white {
    & button {
      color: var(--color-white);
    }
  }
  .\[\&_button\]\:ring-offset-0 {
    & button {
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .\[\&_button\]\:ring-offset-1 {
    & button {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .\[\&_button\]\:outline-offset-1 {
    & button {
      outline-offset: 1px;
    }
  }
  .\[\&_button\]\:outline-offset-2 {
    & button {
      outline-offset: 2px;
    }
  }
  .\[\&_button\]\:transition-all {
    & button {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\[\&_button\]\:duration-500 {
    & button {
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .\[\&_button\]\:before\:absolute {
    & button {
      &::before {
        content: var(--tw-content);
        position: absolute;
      }
    }
  }
  .\[\&_button\]\:before\:bottom-0 {
    & button {
      &::before {
        content: var(--tw-content);
        bottom: calc(var(--spacing) * 0);
      }
    }
  }
  .\[\&_button\]\:before\:left-0 {
    & button {
      &::before {
        content: var(--tw-content);
        left: calc(var(--spacing) * 0);
      }
    }
  }
  .\[\&_button\]\:before\:z-\[-1\] {
    & button {
      &::before {
        content: var(--tw-content);
        z-index: -1;
      }
    }
  }
  .\[\&_button\]\:before\:h-full {
    & button {
      &::before {
        content: var(--tw-content);
        height: 100%;
      }
    }
  }
  .\[\&_button\]\:before\:w-0 {
    & button {
      &::before {
        content: var(--tw-content);
        width: calc(var(--spacing) * 0);
      }
    }
  }
  .\[\&_button\]\:before\:w-1 {
    & button {
      &::before {
        content: var(--tw-content);
        width: calc(var(--spacing) * 1);
      }
    }
  }
  .\[\&_button\]\:before\:bg-green {
    & button {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-green);
      }
    }
  }
  .\[\&_button\]\:after\:absolute {
    & button {
      &::after {
        content: var(--tw-content);
        position: absolute;
      }
    }
  }
  .\[\&_button\]\:after\:right-0 {
    & button {
      &::after {
        content: var(--tw-content);
        right: calc(var(--spacing) * 0);
      }
    }
  }
  .\[\&_button\]\:after\:bottom-0 {
    & button {
      &::after {
        content: var(--tw-content);
        bottom: calc(var(--spacing) * 0);
      }
    }
  }
  .\[\&_button\]\:after\:z-\[-1\] {
    & button {
      &::after {
        content: var(--tw-content);
        z-index: -1;
      }
    }
  }
  .\[\&_button\]\:after\:h-full {
    & button {
      &::after {
        content: var(--tw-content);
        height: 100%;
      }
    }
  }
  .\[\&_button\]\:after\:w-0 {
    & button {
      &::after {
        content: var(--tw-content);
        width: calc(var(--spacing) * 0);
      }
    }
  }
  .\[\&_button\]\:after\:w-1 {
    & button {
      &::after {
        content: var(--tw-content);
        width: calc(var(--spacing) * 1);
      }
    }
  }
  .\[\&_button\]\:after\:bg-green {
    & button {
      &::after {
        content: var(--tw-content);
        background-color: var(--color-green);
      }
    }
  }
  .\[\&_button\]\:hover\:bg-green {
    & button {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-green);
        }
      }
    }
  }
  .\[\&_button\]\:hover\:text-black {
    & button {
      &:hover {
        @media (hover: hover) {
          color: var(--color-black);
        }
      }
    }
  }
  .\[\&_button\]\:hover\:before\:w-full {
    & button {
      &:hover {
        @media (hover: hover) {
          &::before {
            content: var(--tw-content);
            width: 100%;
          }
        }
      }
    }
  }
  .\[\&_button\]\:hover\:after\:w-full {
    & button {
      &:hover {
        @media (hover: hover) {
          &::after {
            content: var(--tw-content);
            width: 100%;
          }
        }
      }
    }
  }
  .\[\&_p\]\:text-center {
    & p {
      text-align: center;
    }
  }
}
* {
  font-family: :Inter;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-content: "";
    }
  }
}
